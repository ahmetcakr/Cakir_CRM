using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CRM.Persistence.Migrations
{
    /// <inheritdoc />
    public partial class operationClaims : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 142, 248, 54, 224, 249, 95, 9, 48, 137, 220, 112, 90, 211, 129, 88, 16, 184, 33, 178, 51, 68, 6, 69, 254, 13, 175, 208, 164, 140, 77, 134, 180, 213, 56, 112, 191, 120, 125, 122, 79, 140, 153, 182, 132, 117, 225, 107, 201, 37, 55, 255, 75, 125, 223, 252, 63, 121, 117, 40, 147, 229, 234, 54, 85 }, new byte[] { 240, 177, 174, 177, 254, 254, 172, 232, 162, 112, 56, 188, 222, 23, 145, 209, 241, 128, 123, 182, 3, 112, 27, 177, 62, 199, 158, 138, 49, 244, 167, 238, 45, 204, 244, 129, 154, 180, 153, 102, 44, 232, 33, 119, 218, 64, 248, 243, 156, 152, 200, 230, 197, 16, 4, 44, 178, 112, 175, 154, 114, 252, 127, 36, 240, 45, 231, 253, 134, 65, 129, 46, 103, 10, 151, 207, 14, 61, 55, 209, 124, 20, 221, 155, 40, 187, 77, 73, 61, 20, 144, 235, 207, 140, 226, 52, 122, 104, 196, 89, 85, 173, 67, 214, 15, 186, 47, 222, 72, 165, 247, 11, 218, 150, 164, 171, 122, 108, 58, 79, 67, 151, 121, 61, 251, 3, 157, 14 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 57, 2, 170, 59, 20, 165, 97, 240, 119, 102, 63, 147, 199, 10, 71, 80, 190, 8, 29, 143, 45, 156, 125, 115, 50, 112, 3, 162, 72, 4, 124, 170, 1, 148, 76, 220, 43, 41, 155, 136, 30, 237, 182, 150, 10, 234, 54, 179, 227, 61, 41, 42, 183, 55, 205, 67, 100, 210, 229, 162, 142, 132, 204, 105 }, new byte[] { 140, 121, 44, 108, 206, 59, 244, 28, 204, 34, 129, 1, 247, 75, 54, 228, 107, 84, 10, 42, 99, 247, 186, 105, 17, 22, 107, 204, 89, 175, 118, 151, 168, 69, 224, 155, 175, 110, 126, 174, 80, 224, 9, 76, 54, 50, 237, 251, 181, 143, 24, 77, 171, 244, 248, 243, 208, 163, 183, 186, 210, 40, 100, 233, 213, 61, 191, 85, 248, 128, 64, 140, 175, 135, 78, 232, 247, 103, 131, 175, 77, 200, 6, 152, 18, 4, 189, 67, 185, 13, 212, 200, 25, 0, 194, 103, 12, 210, 243, 186, 89, 227, 223, 255, 202, 158, 192, 127, 187, 46, 44, 235, 245, 19, 20, 234, 30, 46, 175, 242, 18, 14, 140, 254, 79, 176, 8, 107 } });
        }
    }
}
